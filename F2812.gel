/******************************************************************/
/* Code Composer Studio supports five reserved GEL functions that */
/* automatically get executed if they are defined. They are:      */
/*                                                                */
/* StartUp()              - Executed whenever CCS is invoked      */
/* OnReset()              - Executed after Debug->Reset CPU       */
/* OnRestart()            - Executed after Debug->Restart         */
/* OnPreFileLoaded()      - Executed before File->Load Program    */
/* OnFileLoaded()         - Executed after File->Load Program     */
/*                                                                */
/******************************************************************/

/* XINTF timing config */

#define EXTIMING0 0x00000B20
#define EXTIMING1 0x00000B22
#define EXTIMING2 0x00000B24
#define EXTIMING6 0x00000B2C
#define EXBANK    0x00000B38
#define EXINTCFG2 0x00000B34

StartUp()
{
    /* Initialize F2812 memory map */
    /*GEL_Reset();*/
    F2812_Memory_Map();
    Unlock_CSM();
    Disable_WD();    
    /* Enable_DFT(); */
    GEL_TextOut("Gel StartUp Complete.\n");
}

OnReset(int nErrorCode)
{
    Enable_DFT();
}

/* commented out to avoid execution
OnRestart(int nErrorCode)
{
}

OnPreFileLoaded()
{
}

OnFileLoaded(int nErrorCode, int bSymbolsOnly)
{
}
*/

menuitem "Initialize Memory Map";

/*------------------- F2812 Memory Map, MPNMC=0 --------------------*/
/*                                                                  */
/*   Note: M0M1MAP and VMAP signals tied high on F2812 core         */
/*                                                                  */
/*   0x000000 - 0x0007ff   M0/M1 SARAM             (Prog and Data)  */
/*   0x000800 - 0x000fff   Peripheral Frame0 (PF0) (Data only)      */
/*   0x002000 - 0x003fff   XINTF ZONE 0            (Prog and Data)  */
/*   0x004000 - 0x005fff   XINTF ZONE 1            (Prog and Data)  */
/*   0x006000 - 0x006fff   Peripheral Frame1 (PF1) (Data only)      */
/*   0x007000 - 0x007fff   Peripheral Frame2 (PF2) (Data only)      */
/*   0x008000 - 0x009fff   L0/L1 SARAM             (Prog and Data)  */
/*   0x080000 - 0x0fffff   XINTF ZONE 2            (Prog and Data)  */
/*   0x100000 - 0x17ffff   XINTF ZONE 6            (Prog and Data)  */
/*   0x3d7800 - 0x3d7fff   OTP                     (Prog and Data)  */
/*   0x3d8000 - 0x3f7fff   FLASH                   (Prog and Data)  */
/*   0x3f8000 - 0x3f9fff   H0 SARAM                (Prog and Data)  */
/*   0x3fc000 - 0x3fffff   XINTF ZONE 7 (MPNMC=1)  (Prog and Data)  */
/*   0x3ff000 - 0x3fffff   BOOT ROM     (MPNMC=0)  (Prog and Data)  */
/*------------------------------------------------------------------*/
hotmenu F2812_Memory_Map()
{
    GEL_MapReset();
    GEL_MapOn();

    /* Program memory maps */
    GEL_MapAdd(0x0,0,0x800,1,1);                  /* M0/M1 SARAM  */
    GEL_MapAdd(0x2000,0,0x2000,1,1);              /* XINTF ZONE 0 */
    GEL_MapAdd(0x4000,0,0x2000,1,1);              /* XINTF ZONE 1 */
    GEL_MapAdd(0x8000,0,0x2000,1,1);              /* L0/L1 SARAM  */
    GEL_MapAdd(0x80000,0,0x80000,1,1);            /* XINTF ZONE 2 */
    GEL_MapAdd(0x100000,0,0x80000,1,1);           /* XINTF ZONE 6 */
    GEL_MapAdd(0x3d7800,0,0x800,1,0);             /* OTP          */
    GEL_MapAdd(0x3d8000,0,0x20000,1,0);           /* FLASH        */
    GEL_MapAdd(0x3f8000,0,0x2000,1,1);            /* H0 SARAM     */

    /* Data memory maps */
    GEL_MapAdd(0x0,1,0x800,1,1);                  /* M0/M1 SARAM  */
    GEL_MapAdd(0x800,1,0x800,1,1);                /* PF0          */
    GEL_MapAdd(0x2000,1,0x2000,1,1);              /* XINTF ZONE 0 */
    GEL_MapAdd(0x4000,1,0x2000,1,1);              /* XINTF ZONE 1 */
    GEL_MapAdd(0x6000,1,0x1000,1,1);              /* PF1          */
    GEL_MapAddStr(0x7000,1,0x1000,"R|W|AS2",0);   /* PF2          */
    GEL_MapAdd(0x8000,1,0x2000,1,1);              /* L0/L1 SARAM  */
    GEL_MapAdd(0x80000,1,0x80000,1,1);            /* XINTF ZONE 2 */
    GEL_MapAdd(0x100000,1,0x80000,1,1);           /* XINTF ZONE 6 */
    GEL_MapAdd(0x3d7800,1,0x800,1,0);             /* OTP          */
    GEL_MapAdd(0x3d8000,1,0x20000,1,0);           /* FLASH        */
    GEL_MapAdd(0x3f8000,1,0x2000,1,1);            /* H0 SARAM     */
    
    //XINTF register
    GEL_MapAdd(0xB20,1,0x40,1,1);    

    /* Uncomment the map that corresponds to the MPNMC value.     */
    F2812_Boot_ROM_Map();
    /* F2812_XINTF_Zone7_Map(); */
}

/* Map Boot ROM if MPNMC = 0                                      */
F2812_Boot_ROM_Map()
{
    GEL_MapAdd(0x3ff000,0,0x1000,1,0);            /* BOOT ROM     */
    GEL_MapAdd(0x3ff000,1,0x1000,1,0);            /* BOOT ROM     */
}

/* Map External Interface Zone 7 if MPNMC = 1                     */
F2812_XINTF_Zone7_Map()
{
    GEL_MapAdd(0x3fc000,0,0x4000,1,1);            /* XINTF ZONE 7 */
    GEL_MapAdd(0x3fc000,1,0x4000,1,1);            /* XINTF ZONE 7 */
}

/* Enable DFT read/write for SARAM blocks */ 
Enable_DFT()
{
    *0x950 = 0x0300;    /* M0 */
    *0x951 = 0x0300;    /* M1 */
    *0x952 = 0x0300;    /* L0 */
    *0x953 = 0x0300;    /* L1 */
    *0x954 = 0x0300;    /* H0 */
}

menuitem "Watchdog";
hotmenu Disable_WD()
{
    /* Enable WD override */
    *0x7029 = *0x7029 | 0x0068;
    *0x7025 = 0x0055; 
    *0x7025 = 0x00AA;
     GEL_TextOut("Disable watchdog.\n");
}

menuitem "Code Security Module"
hotmenu Unlock_CSM()
{
    /* Assumes flash is erased */ 
    *0xAE0 = 0xFFFF; 
    *0xAE1 = 0xFFFF; 
    *0xAE2 = 0xFFFF; 
    *0xAE3 = 0xFFFF; 
    *0xAE4 = 0xFFFF; 
    *0xAE5 = 0xFFFF; 
    *0xAE6 = 0xFFFF; 
    *0xAE7 = 0xFFFF; 

    /* Read the password locations */                
    XAR0 = *0x3F7FF8; 
    XAR0 = *0x3F7FF9; 
    XAR0 = *0x3F7FFA; 
    XAR0 = *0x3F7FFB; 
    XAR0 = *0x3F7FFC; 
    XAR0 = *0x3F7FFD; 
    XAR0 = *0x3F7FFE; 
    XAR0 = *0x3F7FFF;    
    
    GEL_TextOut("unlock csm.\n");
}

menuitem "Addressing Modes";
hotmenu C27x_Mode()
{
    AMODE = 0;
    OBJMODE = 0;
}

hotmenu C28x_Mode()
{
    AMODE = 0;
    OBJMODE = 1;
}

hotmenu C2xLP_Mode()
{
    AMODE = 1;
    OBJMODE = 1;
}


/********************************************************************/
/* Code Security Module Registers                                   */
/********************************************************************/
menuitem "Watch Code Security Module Registers";                    

hotmenu CSMSCR()
{
    GEL_WatchAdd("*0x0AEF,x","CSMSCR");
    GEL_WatchAdd("(*0x0AEF>>15)&1,d"," FORCESEC bit");
    GEL_WatchAdd("(*0x0AEF)&1,d","     SECURE bit");
}
hotmenu PWL_Locations()
{
    GEL_WatchAdd("*0x3F7FF8,x","PWL0");
    GEL_WatchAdd("*0x3F7FF9,x","PWL1");
    GEL_WatchAdd("*0x3F7FFA,x","PWL2");
    GEL_WatchAdd("*0x3F7FFB,x","PWL3");
    GEL_WatchAdd("*0x3F7FFC,x","PWL4");
    GEL_WatchAdd("*0x3F7FFD,x","PWL5");
    GEL_WatchAdd("*0x3F7FFE,x","PWL6");
    GEL_WatchAdd("*0x3F7FFF,x","PWL7");
}

menuitem "Watch SCI Registers";                    

hotmenu All_SCIA_Regs()
{
    GEL_WatchAdd("*0x7050,x","SCICCRA");
    GEL_WatchAdd("*0x7051,x","SCICTL1A");
    GEL_WatchAdd("*0x7052,x","SCIHBAUDA");
    GEL_WatchAdd("*0x7053,x","SCILBAUDA");
    GEL_WatchAdd("*0x7054,x","SCICTL2A");
    GEL_WatchAdd("*0x7055,x","SCIRXSTA");
    GEL_WatchAdd("*0x7056,x","SCIRXEMUA");
    GEL_WatchAdd("*0x7057,x","SCIRXBUFA");
    GEL_WatchAdd("*0x7059,x","SCITXBUFA");
    GEL_WatchAdd("*0x705A,x","SCIFFTXA");
    GEL_WatchAdd("*0x705B,x","SCIFFRXA");
    GEL_WatchAdd("*0x705C,x","SCIFFCTA");
    GEL_WatchAdd("*0x705F,x","SCIPRIA");
}
hotmenu All_SCIB_Regs()
{
    GEL_WatchAdd("*0x7750,x","SCICCRB");
    GEL_WatchAdd("*0x7751,x","SCICTL1B");
    GEL_WatchAdd("*0x7752,x","SCIHBAUDB");
    GEL_WatchAdd("*0x7753,x","SCILBAUDB");
    GEL_WatchAdd("*0x7754,x","SCICTL2B");
    GEL_WatchAdd("*0x7755,x","SCIRXSTB");
    GEL_WatchAdd("*0x7756,x","SCIRXEMUB");
    GEL_WatchAdd("*0x7757,x","SCIRXBUFB");
    GEL_WatchAdd("*0x7759,x","SCITXBUFB");
    GEL_WatchAdd("*0x775A,x","SCIFFTXB");
    GEL_WatchAdd("*0x775B,x","SCIFFRXB");
    GEL_WatchAdd("*0x775C,x","SCIFFCTB");
    GEL_WatchAdd("*0x775F,x","SCIPRIB");
}

menuitem "Watch SPI Registers";                    

hotmenu All_SPI_Regs()
{
    GEL_WatchAdd("*0x7040,x","SPICCR");
    GEL_WatchAdd("*0x7041,x","SPICTL");
    GEL_WatchAdd("*0x7042,x","SPIST");
    GEL_WatchAdd("*0x7044,x","SPIBRR");
    GEL_WatchAdd("*0x7046,x","SPIEMU");
    GEL_WatchAdd("*0x7047,x","SPIRXBUF");
    GEL_WatchAdd("*0x7048,x","SPITXBUF");
    GEL_WatchAdd("*0x7049,x","SPIDAT");
    GEL_WatchAdd("*0x704A,x","SPIFFTX");
    GEL_WatchAdd("*0x704B,x","SPIFFRX");
    GEL_WatchAdd("*0x704C,x","SPIFFCT");
    GEL_WatchAdd("*0x704F,x","SPIPRI");
}


menuitem "Watch GPIO Registers";                    

hotmenu All_GPIO_MUX_Regs()
{
    GEL_WatchAdd("*0x70C0,x","GPAMUX");
    GEL_WatchAdd("*0x70C1,x","GPADIR");
    GEL_WatchAdd("*0x70C2,x","GPAQUAL");
    GEL_WatchAdd("*0x70C4,x","GPBMUX");
    GEL_WatchAdd("*0x70C5,x","GPBDIR");
    GEL_WatchAdd("*0x70C6,x","GPBQUAL");
    GEL_WatchAdd("*0x70CC,x","GPDMUX");
    GEL_WatchAdd("*0x70CD,x","GPDDIR");
    GEL_WatchAdd("*0x70CE,x","GPDQUAL");
    GEL_WatchAdd("*0x70D0,x","GPEMUX");
    GEL_WatchAdd("*0x70D1,x","GPEDIR");
    GEL_WatchAdd("*0x70D2,x","GPEQUAL");
    GEL_WatchAdd("*0x70D4,x","GPFMUX");
    GEL_WatchAdd("*0x70D5,x","GPFDIR");
    GEL_WatchAdd("*0x70D8,x","GPGMUX");
    GEL_WatchAdd("*0x70D9,x","GPGDIR");
}
hotmenu All_GPIO_DATA_Regs()
{
    GEL_WatchAdd("*0x70E0,x","GPADAT");
    GEL_WatchAdd("*0x70E1,x","GPASET");
    GEL_WatchAdd("*0x70E2,x","GPACLEAR");
    GEL_WatchAdd("*0x70E3,x","GPATOGGLE");
    GEL_WatchAdd("*0x70E4,x","GPBDAT");
    GEL_WatchAdd("*0x70E5,x","GPBSET");
    GEL_WatchAdd("*0x70E6,x","GPBCLEAR");
    GEL_WatchAdd("*0x70E7,x","GPBTOGGLE");
    GEL_WatchAdd("*0x70EC,x","GPDDAT");
    GEL_WatchAdd("*0x70ED,x","GPDSET");
    GEL_WatchAdd("*0x70EE,x","GPDCLEAR");
    GEL_WatchAdd("*0x70EF,x","GPDTOGGLE");
    GEL_WatchAdd("*0x70F0,x","GPEDAT");
    GEL_WatchAdd("*0x70F1,x","GPESET");
    GEL_WatchAdd("*0x70F2,x","GPECLEAR");
    GEL_WatchAdd("*0x70F3,x","GPETOGGLE");
    GEL_WatchAdd("*0x70F4,x","GPFDAT");
    GEL_WatchAdd("*0x70F5,x","GPFSET");
    GEL_WatchAdd("*0x70F6,x","GPFCLEAR");
    GEL_WatchAdd("*0x70F7,x","GPFTOGGLE");
    GEL_WatchAdd("*0x70F8,x","GPGDAT");
    GEL_WatchAdd("*0x70F9,x","GPGSET");
    GEL_WatchAdd("*0x70FA,x","GPGCLEAR");
    GEL_WatchAdd("*0x70FB,x","GPGTOGGLE");
}
hotmenu All_GPA_Registers()
{
    GEL_WatchAdd("*0x70C0,x","GPAMUX");
    GEL_WatchAdd("*0x70C1,x","GPADIR");
    GEL_WatchAdd("*0x70C2,x","GPAQUAL");
    GEL_WatchAdd("*0x70E0,x","GPADAT");
    GEL_WatchAdd("*0x70E1,x","GPASET");
    GEL_WatchAdd("*0x70E2,x","GPACLEAR");
    GEL_WatchAdd("*0x70E3,x","GPATOGGLE");
}
hotmenu All_GPB_Registers()
{
    GEL_WatchAdd("*0x70C4,x","GPBMUX");
    GEL_WatchAdd("*0x70C5,x","GPBDIR");
    GEL_WatchAdd("*0x70C6,x","GPBQUAL");
    GEL_WatchAdd("*0x70E4,x","GPBDAT");
    GEL_WatchAdd("*0x70E5,x","GPBSET");
    GEL_WatchAdd("*0x70E6,x","GPBCLEAR");
    GEL_WatchAdd("*0x70E7,x","GPBTOGGLE");
}
hotmenu All_GPD_Registers()
{
    GEL_WatchAdd("*0x70CC,x","GPDMUX");
    GEL_WatchAdd("*0x70CD,x","GPDDIR");
    GEL_WatchAdd("*0x70CE,x","GPDQUAL");
    GEL_WatchAdd("*0x70EC,x","GPDDAT");
    GEL_WatchAdd("*0x70ED,x","GPDSET");
    GEL_WatchAdd("*0x70EE,x","GPDCLEAR");
    GEL_WatchAdd("*0x70EF,x","GPDTOGGLE");
}
hotmenu All_GPE_Registers()
{
    GEL_WatchAdd("*0x70D0,x","GPEMUX");
    GEL_WatchAdd("*0x70D1,x","GPEDIR");
    GEL_WatchAdd("*0x70D2,x","GPEQUAL");
    GEL_WatchAdd("*0x70F0,x","GPEDAT");
    GEL_WatchAdd("*0x70F1,x","GPESET");
    GEL_WatchAdd("*0x70F2,x","GPECLEAR");
    GEL_WatchAdd("*0x70F3,x","GPETOGGLE");
}
hotmenu All_GPF_Registers()
{
    GEL_WatchAdd("*0x70D4,x","GPFMUX");
    GEL_WatchAdd("*0x70D5,x","GPFDIR");
    GEL_WatchAdd("*0x70F4,x","GPFDAT");
    GEL_WatchAdd("*0x70F5,x","GPFSET");
    GEL_WatchAdd("*0x70F6,x","GPFCLEAR");
    GEL_WatchAdd("*0x70F7,x","GPFTOGGLE");
}
hotmenu All_GPG_Registers()
{
    GEL_WatchAdd("*0x70D8,x","GPGMUX");
    GEL_WatchAdd("*0x70D9,x","GPGDIR");
    GEL_WatchAdd("*0x70F8,x","GPGDAT");
    GEL_WatchAdd("*0x70F9,x","GPGSET");
    GEL_WatchAdd("*0x70FA,x","GPGCLEAR");
    GEL_WatchAdd("*0x70FB,x","GPGTOGGLE");
}


menuitem "Watch Flash/OTP Registers";                    

hotmenu All_Flash_and_OTP_Regs()
{
    GEL_WatchAdd("*0x0A80,x","FOPT");
    GEL_WatchAdd("*0x0A82,x","FPWR");
    GEL_WatchAdd("*0x0A83,x","FSTATUS");
    GEL_WatchAdd("*0x0A84,x","FSTDBYWAIT");
    GEL_WatchAdd("*0x0A85,x","FACTIVEWAIT");
    GEL_WatchAdd("*0x0A86,x","FBANKWAIT");
    GEL_WatchAdd("*0x0A87,x","FOTPWAIT");
}


menuitem "Watch CPU Timer Registers";

hotmenu All_CPU_Timer0_Regs()
{
    GEL_WatchAdd("*0x0C00,x","TIMER0TIM");
    GEL_WatchAdd("*0x0C01,x","TIMER0TIMH");
    GEL_WatchAdd("*0x0C02,x","TIMER0PRD");
    GEL_WatchAdd("*0x0C03,x","TIMER0PRDH");
    GEL_WatchAdd("*0x0C04,x","TIMER0TCR");
    GEL_WatchAdd("*0x0C06,x","TIMER0TPR");
    GEL_WatchAdd("*0x0C07,x","TIMER0TPRH");
}
hotmenu All_CPU_Timer1_Regs()
{
    GEL_WatchAdd("*0x0C08,x","TIMER1TIM");
    GEL_WatchAdd("*0x0C09,x","TIMER1TIMH");
    GEL_WatchAdd("*0x0C0A,x","TIMER1PRD");
    GEL_WatchAdd("*0x0C0B,x","TIMER1PRDH");
    GEL_WatchAdd("*0x0C0C,x","TIMER1TCR");
    GEL_WatchAdd("*0x0C0E,x","TIMER1TPR");
    GEL_WatchAdd("*0x0C0F,x","TIMER1TPRH");
}
hotmenu All_CPU_Timer2_Regs()
{
    GEL_WatchAdd("*0x0C10,x","TIMER2TIM");
    GEL_WatchAdd("*0x0C11,x","TIMER2TIMH");
    GEL_WatchAdd("*0x0C12,x","TIMER2PRD");
    GEL_WatchAdd("*0x0C13,x","TIMER2PRDH");
    GEL_WatchAdd("*0x0C14,x","TIMER2TCR");
    GEL_WatchAdd("*0x0C16,x","TIMER2TPR");
    GEL_WatchAdd("*0x0C17,x","TIMER2TPRH");
}

menuitem "Watch Device Emulation Registers";                    

hotmenu All_Emulation_Regs()
{
    GEL_WatchAdd("*(long *)0x0880,x","DEVICECNF");
    GEL_WatchAdd("*(long *)0x0882,x","DEVICEID");
    GEL_WatchAdd("*0x0884,x","PROTSTART");
    GEL_WatchAdd("*0x0885,x","PROTRANGE");
}



menuitem "XINTF configure";   
hotmenu configXINTF()
{
	*(unsigned long*)EXINTCFG2=0x0;
	//zone0,1
	*(unsigned long*)EXTIMING0=0x254A;
	*(unsigned long*)EXTIMING1=0x254A;	

	//zone2
	*(unsigned long*)EXTIMING2=0x254A;
	//zone6
	*(unsigned long*)EXTIMING6=0x254A;		
	
	//bank
	*(unsigned short*)EXBANK=0xE;		
		
	
}
